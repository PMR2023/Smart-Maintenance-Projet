// Generated by view binder compiler. Do not edit!
package com.codewithkael.webrtcprojectforrecord.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codewithkael.webrtcprojectforrecord.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.webrtc.SurfaceViewRenderer;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout StartScreen;

  @NonNull
  public final ImageView acceptButton;

  @NonNull
  public final ImageView audioOutputButton;

  @NonNull
  public final Button buttonExp;

  @NonNull
  public final RelativeLayout callLayout;

  @NonNull
  public final TextView codeTV;

  @NonNull
  public final LinearLayout controls;

  @NonNull
  public final ImageView endCallButton;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final LinearLayout incomingCallLayout;

  @NonNull
  public final TextView incomingNameTV;

  @NonNull
  public final SurfaceViewRenderer localView;

  @NonNull
  public final ImageView micButton;

  @NonNull
  public final ImageView rejectButton;

  @NonNull
  public final SurfaceViewRenderer remoteView;

  @NonNull
  public final ProgressBar remoteViewLoading;

  @NonNull
  public final ImageView switchCameraButton;

  @NonNull
  public final EditText targetKey;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final ImageView videoButton;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout StartScreen, @NonNull ImageView acceptButton,
      @NonNull ImageView audioOutputButton, @NonNull Button buttonExp,
      @NonNull RelativeLayout callLayout, @NonNull TextView codeTV, @NonNull LinearLayout controls,
      @NonNull ImageView endCallButton, @NonNull ImageView imageView, @NonNull ImageView imageView2,
      @NonNull ImageView imageView3, @NonNull ImageView imageView4,
      @NonNull LinearLayout incomingCallLayout, @NonNull TextView incomingNameTV,
      @NonNull SurfaceViewRenderer localView, @NonNull ImageView micButton,
      @NonNull ImageView rejectButton, @NonNull SurfaceViewRenderer remoteView,
      @NonNull ProgressBar remoteViewLoading, @NonNull ImageView switchCameraButton,
      @NonNull EditText targetKey, @NonNull TextView textView, @NonNull TextView textView2,
      @NonNull ImageView videoButton) {
    this.rootView = rootView;
    this.StartScreen = StartScreen;
    this.acceptButton = acceptButton;
    this.audioOutputButton = audioOutputButton;
    this.buttonExp = buttonExp;
    this.callLayout = callLayout;
    this.codeTV = codeTV;
    this.controls = controls;
    this.endCallButton = endCallButton;
    this.imageView = imageView;
    this.imageView2 = imageView2;
    this.imageView3 = imageView3;
    this.imageView4 = imageView4;
    this.incomingCallLayout = incomingCallLayout;
    this.incomingNameTV = incomingNameTV;
    this.localView = localView;
    this.micButton = micButton;
    this.rejectButton = rejectButton;
    this.remoteView = remoteView;
    this.remoteViewLoading = remoteViewLoading;
    this.switchCameraButton = switchCameraButton;
    this.targetKey = targetKey;
    this.textView = textView;
    this.textView2 = textView2;
    this.videoButton = videoButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.StartScreen;
      ConstraintLayout StartScreen = ViewBindings.findChildViewById(rootView, id);
      if (StartScreen == null) {
        break missingId;
      }

      id = R.id.acceptButton;
      ImageView acceptButton = ViewBindings.findChildViewById(rootView, id);
      if (acceptButton == null) {
        break missingId;
      }

      id = R.id.audio_output_button;
      ImageView audioOutputButton = ViewBindings.findChildViewById(rootView, id);
      if (audioOutputButton == null) {
        break missingId;
      }

      id = R.id.buttonExp;
      Button buttonExp = ViewBindings.findChildViewById(rootView, id);
      if (buttonExp == null) {
        break missingId;
      }

      id = R.id.callLayout;
      RelativeLayout callLayout = ViewBindings.findChildViewById(rootView, id);
      if (callLayout == null) {
        break missingId;
      }

      id = R.id.codeTV;
      TextView codeTV = ViewBindings.findChildViewById(rootView, id);
      if (codeTV == null) {
        break missingId;
      }

      id = R.id.controls;
      LinearLayout controls = ViewBindings.findChildViewById(rootView, id);
      if (controls == null) {
        break missingId;
      }

      id = R.id.end_call_button;
      ImageView endCallButton = ViewBindings.findChildViewById(rootView, id);
      if (endCallButton == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.incomingCallLayout;
      LinearLayout incomingCallLayout = ViewBindings.findChildViewById(rootView, id);
      if (incomingCallLayout == null) {
        break missingId;
      }

      id = R.id.incomingNameTV;
      TextView incomingNameTV = ViewBindings.findChildViewById(rootView, id);
      if (incomingNameTV == null) {
        break missingId;
      }

      id = R.id.local_view;
      SurfaceViewRenderer localView = ViewBindings.findChildViewById(rootView, id);
      if (localView == null) {
        break missingId;
      }

      id = R.id.mic_button;
      ImageView micButton = ViewBindings.findChildViewById(rootView, id);
      if (micButton == null) {
        break missingId;
      }

      id = R.id.rejectButton;
      ImageView rejectButton = ViewBindings.findChildViewById(rootView, id);
      if (rejectButton == null) {
        break missingId;
      }

      id = R.id.remote_view;
      SurfaceViewRenderer remoteView = ViewBindings.findChildViewById(rootView, id);
      if (remoteView == null) {
        break missingId;
      }

      id = R.id.remote_view_loading;
      ProgressBar remoteViewLoading = ViewBindings.findChildViewById(rootView, id);
      if (remoteViewLoading == null) {
        break missingId;
      }

      id = R.id.switch_camera_button;
      ImageView switchCameraButton = ViewBindings.findChildViewById(rootView, id);
      if (switchCameraButton == null) {
        break missingId;
      }

      id = R.id.targetKey;
      EditText targetKey = ViewBindings.findChildViewById(rootView, id);
      if (targetKey == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.video_button;
      ImageView videoButton = ViewBindings.findChildViewById(rootView, id);
      if (videoButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, StartScreen, acceptButton,
          audioOutputButton, buttonExp, callLayout, codeTV, controls, endCallButton, imageView,
          imageView2, imageView3, imageView4, incomingCallLayout, incomingNameTV, localView,
          micButton, rejectButton, remoteView, remoteViewLoading, switchCameraButton, targetKey,
          textView, textView2, videoButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
